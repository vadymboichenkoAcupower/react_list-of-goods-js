{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD","BY_ALPHABET","BY_LENGTH","defaultSortField","field","isReversed","App","useState","sortField","setSortField","visibleGoods","goods","prepareGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwBF,IAAMC,EAAa,CACjBC,YAAa,WACbC,UAAW,UAGPC,EAAmB,CACvBC,MAAO,GACPC,YAAY,GAGDC,EAAM,WACjB,MAAkCC,mBAASJ,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAlCR,SAA0BC,EAAOH,GAC/B,IAAMI,EAAY,YAAOD,GAezB,OAbIH,GACFI,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,EAAUJ,OAChB,KAAKJ,EAAWC,YACd,OAAOa,EAAME,cAAcD,GAC7B,KAAKf,EAAWE,UACd,OAAOY,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKRT,EAAUH,WACbO,EAAaM,UACbN,EAiBAO,CAAiBpB,EAAiBS,GAE9BJ,EAAsBI,EAAtBJ,MAAOC,EAAeG,EAAfH,WAEf,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,aAAclB,IAAUJ,EAAWC,eACvCsB,QAAS,kBAAMd,EAAa,2BACvBD,GADsB,IAEzBJ,MAAOJ,EAAWC,gBANtB,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,aAAclB,IAAUJ,EAAWE,aACvCqB,QAAS,kBAAMd,EAAa,2BACvBD,GADsB,IAEzBJ,MAAOJ,EAAWE,cANtB,4BAYA,wBACEmB,KAAK,SACLD,UACEE,IAAG,oBAAqB,CACtB,YAAajB,IAGjBkB,QAAS,kBAAMd,EAAa,2BACvBD,GADsB,IAEzBH,YAAaA,MATjB,qBAeCD,GAASC,EACR,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMd,EAAaN,IAH9B,mBAOE,MAIN,6BACGO,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC9GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d558a678.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, sortField) {\n  const prepareGoods = [...goods];\n\n  if (sortField) {\n    prepareGoods.sort((good1, good2) => {\n      switch (sortField.field) {\n        case SORT_FIELD.BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_FIELD.BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return sortField.isReversed\n    ? prepareGoods.reverse()\n    : prepareGoods;\n}\n\nconst SORT_FIELD = {\n  BY_ALPHABET: 'alphabet',\n  BY_LENGTH: 'length',\n};\n\nconst defaultSortField = {\n  field: '',\n  isReversed: false,\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(defaultSortField);\n\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, sortField);\n\n  const { field, isReversed } = sortField;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': !(field === SORT_FIELD.BY_ALPHABET) })}\n          onClick={() => setSortField({\n            ...sortField,\n            field: SORT_FIELD.BY_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': !(field === SORT_FIELD.BY_LENGTH) })}\n          onClick={() => setSortField({\n            ...sortField,\n            field: SORT_FIELD.BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning', {\n              'is-light': !isReversed,\n            })\n          }\n          onClick={() => setSortField({\n            ...sortField,\n            isReversed: !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {field || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setSortField(defaultSortField)}\n          >\n            Reset\n          </button>\n        ) : ''}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}